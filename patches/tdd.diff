--- apps/app_tdd.c.orig	2021-11-26 11:41:57.041845942 +0000
+++ apps/app_tdd.c	2021-11-26 13:11:32.944708917 +0000
@@ -53,7 +53,7 @@
 	</application>
 	<application name="TddTx" language="en_US">
 		<synopsis>
-			Send <replaceable>message</replaceable> using TDD tones on the current channel.
+			Send message using TDD tones on the current channel.
 		</synopsis>
 		<syntax>
 			<parameter name="message" required="true" />
@@ -78,7 +78,7 @@
 			</parameter>
 			<parameter name="Message" required="true">
 				<para>The message to be sent.</para>
-				<para><note>NOTE:</note> TDD uses BAUDOT code which limits the characters that can be sent. Invalid characters are silently ignored.</para>
+				<note><para>NOTE: TDD uses BAUDOT code which limits the characters that can be sent. Invalid characters are silently ignored.</para></note>
 			</parameter>
 		</syntax>
 		<description>
@@ -308,7 +308,7 @@
 		span_log(&s->logging, SPAN_LOG_FLOW, "baudot returned zero");
 	}
 
-	if (s->rx_msg_len >= 256)
+	if (s->rx_msg_len >= 8) /*! \todo 256 is way too high, but this value should be made a user-time option */
 	{
 		s->rx_msg[s->rx_msg_len] = '\0';
 		span_log(&s->logging, SPAN_LOG_FLOW, "[bufsiz] calling put_msg with %d chars", s->rx_msg_len);
@@ -524,6 +524,8 @@
 {
 	struct ast_datastore *datastore = NULL;
 	struct tdd_info *ti = NULL;
+	v18_state_t *vs = NULL;
+	fsk_rx_state_t *fs = NULL;
 
 	RAII_VAR(struct stasis_message *, stasis_message, NULL, ao2_cleanup);
 	RAII_VAR(struct ast_json *, stasis_message_blob, NULL, ast_json_unref);
@@ -563,8 +565,8 @@
 
 	set_logging(v18_get_logging_state(&ti->v18_state));
 
-	v18_state_t *vs = &ti->v18_state;
-	fsk_rx_state_t *fs = &vs->fskrx;
+	vs = &ti->v18_state;
+	fs = &vs->fskrx;
 	fsk_rx_set_modem_status_handler(fs, modem_rx_status, ti); /* override */
 	fsk_rx_set_put_bit(fs, my_v18_tdd_put_async_byte, ti);    /* override */
 
